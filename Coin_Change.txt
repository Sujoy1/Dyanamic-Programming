#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends


class Solution
{
  public:
    long long int count( int S[], int m, int n )
    {
       swap(n,m);
        //code here.
        int amount = m;
        int i,j;
        vector<vector<long long >> dp(n+1,vector<long long>(amount+1));
       //Fill 1st row with 0 because no amount (except 0) can be formed without any coin
      //  int i,j;
        for(i=1;i<=amount;++i)
            dp[0][i] = 0;
        //Fill 1st col by 1 (assuming amount 0 can always be formed)
        for(i=0;i<=n;++i)
            dp[i][0] = 1;
        
        //Fill DP-Table
        for(i=1;i<=n;++i)
        {
            for(j=1;j<=amount;++j)
            {
                if(j>=S[i-1])
                    dp[i][j] = dp[i][j-S[i-1]]+dp[i-1][j];
                else
                    dp[i][j] = dp[i-1][j];
            }
        }
        return dp[n][amount];
    }
};

// { Driver Code Starts.
int main()
{
    int t;
    cin>>t;
	while(t--)
	{
		int n,m;
		cin>>n>>m;
		int arr[m];
		for(int i=0;i<m;i++)
		    cin>>arr[i];
	    Solution ob;
		cout<<ob.count(arr,m,n)<<endl;
	}
    
    
    return 0;
}  // } Driver Code Ends